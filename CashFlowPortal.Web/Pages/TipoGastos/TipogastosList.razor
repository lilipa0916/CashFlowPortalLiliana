@page "/tipogastos"



@inject ITipoGastoService TipoGastoService
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Tipos de Gasto</h2>
@*         <button class="btn btn-primary mb-3" @onclick="Create">Nuevo Tipo de Gasto</button>
 *@        <NavLink class="btn btn-primary" href="/tipogastos/form">
            <i class="bi bi-plus-lg"></i> Nuevo Tipo de Gasto
        </NavLink>
    </div>

    @if (tipos == null)
    {
        <div class="alert alert-info">Cargando...</div>
    }
    else if (!tipos.Any())
    {
        <div class="alert alert-info">
            No hay tipos de gasto registrados.
        </div>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Nombre</th>
                    <th class="text-end">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in tipos)
                {
                    <tr>
                        <td>@item.Codigo</td>
                        <td>@item.Nombre</td>
                        <td class="text-end">
                            <button class="btn btn-sm btn-secondary me-1" @onclick="() => Edit(item.Id)"> <i class="bi bi-pencil"></i></button>
                             @* <button class="btn btn-sm btn-danger" @onclick="() => Delete(item.Id)">Eliminar</button> 

                            <NavLink class="btn btn-sm btn-secondary me-1" href="/tipogastos/form/{item.id}">
                                <i class="bi bi-pencil"></i>
                            </NavLink>*@
                            <button class="btn btn-sm btn-danger" @onclick="() => Delete(item.Id)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

</div>
@code {
    private List<CashFlowPortal.Applicacion.DTOs.TipoGasto.TipoGastoDto> tipos;

    protected override async Task OnInitializedAsync()
    {
        tipos = (await TipoGastoService.GetAllAsync()).ToList();
    }

    private void Create()
    {
        NavManager.NavigateTo("/tipogastos/form");
    }

    private void Edit(Guid id)
    {
        NavManager.NavigateTo($"/tipogastos/form/{id}");
    }

    private async Task Delete(Guid id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "¿Eliminar este tipo de gasto?"))
        {
            await TipoGastoService.DeleteAsync(id);
            tipos = (await TipoGastoService.GetAllAsync()).ToList();
        }
    }
}