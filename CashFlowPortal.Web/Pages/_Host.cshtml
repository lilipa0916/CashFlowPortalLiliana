@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace CashFlowPortal.Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="CashFlowPortal.Web.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png" />

    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <!-- Script de Chart.js y función renderChart -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var currentChart = null;

        window.renderComparativoChart = (canvasId, labels, presup, ejec, chartType) => {
          const ctx = document.getElementById(canvasId).getContext('2d');

          if (currentChart) {
            currentChart.destroy();
          }

          currentChart = new Chart(ctx, {
            type: chartType,
            data: {
              labels: labels,
              datasets: [
                {
                  label: 'Presupuestado',
                  data: presup,
                  backgroundColor: 'rgba(0, 0, 0, 0.7)'
                },
                {
                  label: 'Ejecutado',
                  data: ejec,
                  backgroundColor: 'rgba(255, 193, 7, 0.8)'
                }
              ]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  position: 'bottom'
                }
              },
              scales: {
                y: {
                  beginAtZero: true,
                  ticks: {
                    callback: function(value) {
                      return new Intl.NumberFormat('es-CO', {
                        style: 'currency',
                        currency: 'COP',
                        minimumFractionDigits: 0
                      }).format(value);
                    }
                  }
                }
              },
              plugins: {
                tooltip: {
                  callbacks: {
                    label: function(context) {
                      const v = context.parsed;
                      return context.dataset.label + ': ' + new Intl.NumberFormat('es-CO', {
                        style: 'currency',
                        currency: 'COP',
                        minimumFractionDigits: 0
                      }).format(v);
                    }
                  }
                }
              }
            }
          });
        };
    </script>
</body>
</html>
