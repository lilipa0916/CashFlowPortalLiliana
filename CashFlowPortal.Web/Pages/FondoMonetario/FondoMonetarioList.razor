@page "/fondos"
@using System.Globalization



@inject IFondoMonetarioService Repo
@inject NavigationManager Nav
@inject IJSRuntime JSRuntime

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Fondos Monetarios</h2>
        <NavLink class="btn btn-primary" href="fondos/crear">
            <i class="bi bi-plus-lg"></i> Nuevo Fondo
        </NavLink>
    </div>

    @if (fondos== null)
    {
        <div class="alert alert-warning">No hay fondos monetarios registrados.</div>

    }
    else if (!fondos.Any())
    {
        <div class="alert alert-info">No hay fondos monetarios registrados.</div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Tipo</th>
                    <th>Saldo</th>
                    <th>Fecha Creación</th>
                    <th class="text-end">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var f in fondos)
                {
                    <tr>
                        <td>@f.Nombre</td>
                        <td>@f.Tipo</td>
                        <td>@f.Saldo.ToString("C", CultureInfo.InvariantCulture)</td>
                        <td>@f.FechaCreacion.ToString("yyyy-MM-dd HH:mm")</td>
                        <td class="text-end">
                           @*  <NavLink class="btn btn-sm btn-secondary me-1" href="fondos/editar/{f.Id}">
                                <i class="bi bi-pencil"></i>
                            </NavLink> *@
                             <button class="btn btn-sm btn-secondary me-1" @onclick="() => Edit(f.Id)">  <i class="bi bi-pencil"></i></button>
                            <button class="btn btn-sm btn-danger" @onclick="() => Eliminar(f.Id)">
                                <i class="bi bi-trash"></i>
                            </button>

                         

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<CashFlowPortal.Applicacion.DTOs.FondoMonetario.FondoMonetarioDto> fondos;

    protected override async Task OnInitializedAsync()
    {
        fondos = (await Repo.GetAllAsync()).ToList();
    }
    private void CrearNuevo() => Nav.NavigateTo("/fondos/crear");

    private void Edit(int id) => Nav.NavigateTo($"/fondos/editar/{id}");

    private async Task Eliminar(int id)
    {
        if (await JsConfirm("¿Está seguro de eliminar este fondo?"))
        {
            await Repo.DeleteAsync(id);
            fondos = await Repo.GetAllAsync();
            StateHasChanged();
        }
    }

    private async Task<bool> JsConfirm(string mensaje)
    {
        return await JSRuntime.InvokeAsync<bool>("confirm", mensaje);
    }
}