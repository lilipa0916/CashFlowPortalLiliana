// <auto-generated />
using System;
using CashFlowPortal.Infraestructura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CashFlowPortal.Infraestructura.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FondoMonetarioId");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.FondoMonetario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Fondos");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comercio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FondoMonetarioId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.GastoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GastoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TipoGastoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GastoId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("GastoDetalles");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Presupuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("Mes")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TipoGastoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TipoGastoId");

                    b.HasIndex("UsuarioId", "TipoGastoId", "Mes")
                        .IsUnique();

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.PresupuestoDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<decimal>("MontoPresupuestado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PresupuestoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoGastoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PresupuestoId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("PresupuestoDetalle");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.TipoGasto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposGasto");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaveHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5a620c0-3c2b-4b36-87d5-8e4e8e3e44f4"),
                            ClaveHash = "$2a$11$dkCwSRu5VoQ7MyzVNTAbv.1BUL6DyhVRDkZJIbGBsRz5apcFTLQ5y",
                            Nombre = "Administrador",
                            Rol = "Admin",
                            UsuarioLogin = "admin"
                        });
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Deposito", b =>
                {
                    b.HasOne("CashFlowPortal.Domain.Entities.FondoMonetario", "FondoMonetario")
                        .WithMany()
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Gasto", b =>
                {
                    b.HasOne("CashFlowPortal.Domain.Entities.FondoMonetario", "FondoMonetario")
                        .WithMany()
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.GastoDetalle", b =>
                {
                    b.HasOne("CashFlowPortal.Domain.Entities.Gasto", "Gasto")
                        .WithMany("Detalles")
                        .HasForeignKey("GastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashFlowPortal.Domain.Entities.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gasto");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Presupuesto", b =>
                {
                    b.HasOne("CashFlowPortal.Domain.Entities.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashFlowPortal.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoGasto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.PresupuestoDetalle", b =>
                {
                    b.HasOne("CashFlowPortal.Domain.Entities.Presupuesto", "Presupuesto")
                        .WithMany("Detalles")
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashFlowPortal.Domain.Entities.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Presupuesto");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Gasto", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("CashFlowPortal.Domain.Entities.Presupuesto", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
